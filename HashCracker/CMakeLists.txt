project (HashCracker)

include (GenerateExportHeader)

add_custom_command (
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/Source/ProgramEntry.cpp" "${CMAKE_CURRENT_BINARY_DIR}/Include/ProgramEntry.hpp"
    COMMAND ${CMAKE_COMMAND} "-DCL_DIR=${CMAKE_CURRENT_SOURCE_DIR}/OpenCL" "-DFILE_OUT=ProgramEntry.cpp" "-DDIR_OUT=${CMAKE_CURRENT_BINARY_DIR}" -P "${CMAKE_SOURCE_DIR}/CMake/File2Code.cmake")
    
configure_file (
	"${CMAKE_SOURCE_DIR}/CMake/${PROJECT_NAME}Config.cmake"
	${CMAKE_CURRENT_BINARY_DIR}/Include/Config.hpp @ONLY)

file (GLOB BASE_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Include/*.hpp")
file (GLOB CORE_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Include/Core/*.hpp")
file (GLOB OPENCL_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Include/OpenCL/*.hpp")
file (GLOB TASKS_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Include/Tasks/*.hpp")

list (APPEND BASE_HEADER_FILES
    ${CMAKE_CURRENT_BINARY_DIR}/Include/ProgramEntry.hpp
    ${CMAKE_CURRENT_BINARY_DIR}/Include/Config.hpp
    ${CMAKE_CURRENT_BINARY_DIR}/Include/Export.hpp)

source_group ("Include\\" FILES ${BASE_HEADER_FILES})
source_group ("Include\\Core" FILES ${CORE_HEADER_FILES})
source_group ("Include\\OpenCL" FILES ${OPENCL_HEADER_FILES})
source_group ("Include\\Tasks" FILES ${TASKS_HEADER_FILES})

set (HEADER_FILES
	${BASE_HEADER_FILES}
    ${CORE_HEADER_FILES}
    ${OPENCL_HEADER_FILES}
    ${TASKS_HEADER_FILES})

file (GLOB BASE_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Source/*.cpp")
file (GLOB CORE_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Source/Core/*.cpp")
file (GLOB OPENCL_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Source/OpenCL/*.cpp")
file (GLOB TASKS_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/Source/Tasks/*.cpp")

list (APPEND BASE_SOURCE_FILES
    ${CMAKE_CURRENT_BINARY_DIR}/Source/ProgramEntry.cpp)

source_group ("Source\\" FILES ${BASE_SOURCE_FILES})
source_group ("Source\\Core" FILES ${CORE_SOURCE_FILES})
source_group ("Source\\OpenCL" FILES ${OPENCL_SOURCE_FILES})
source_group ("Source\\Tasks" FILES ${TASKS_SOURCE_FILES})

set (SOURCE_FILES
	${BASE_SOURCE_FILES}
    ${CORE_SOURCE_FILES}
    ${OPENCL_SOURCE_FILES}
    ${TASKS_SOURCE_FILES})

add_library (${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES})

target_link_libraries (${PROJECT_NAME} PUBLIC OpenCL)

target_include_directories (${PROJECT_NAME} PUBLIC  
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/Include> 
	$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/Include>
    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)

generate_export_header(${PROJECT_NAME}
	EXPORT_MACRO_NAME "HASH_CRACKER_PUBLIC"
	EXPORT_FILE_NAME "Include/Export.hpp")
    
install (DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Include/"
    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}")
    
install (DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/Include/"
    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}")

install (TARGETS ${PROJECT_NAME}
	EXPORT ${EXPORT_NAME}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
